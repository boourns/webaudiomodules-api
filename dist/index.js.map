{
  "version": 3,
  "sources": ["../src/AbstractWamEnv.js", "../src/AbstractWamNode.js", "../src/AbstractWamParameter.js", "../src/AbstractWamParameterInfo.js", "../src/AbstractWamProcessor.js", "../src/AbstractWebAudioModule.js", "../src/version.js"],
  "sourcesContent": ["/** @typedef {import('./types').WamEnv} IWamEnv */\n\n/**\n * WebAudioModule v2 WamEnv API in AudioWorkletGlobalScope,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWamEnv}\n */\nexport default class WamEnv {\n\tget dependencies() { throw new Error('Not Implemented.'); return null; }\n\n\tget apiVersion() { throw new Error('Not Implemented.'); return null; }\n\n\tget eventGraph() { throw new Error('Not Implemented.'); return null; }\n\n\tget processors() { throw new Error('Not Implemented.'); return null; }\n\n\tcreate(wam) { throw new Error('Not Implemented.'); return null; }\n\n\tconnectEvents(from, output, to) { throw new Error('Not Implemented.'); return null; }\n\n\tdisconnectEvents(from, output, to) { throw new Error('Not Implemented.'); return null; }\n\n\tdestroy(wam) { throw new Error('Not Implemented.'); return null; }\n}\n", "/** @typedef {import('./types').WamNode} IWamNode */\n\n/**\n * WebAudioModule v2 Main AudioNode API,\n * can be used to build a CompositeNode, see d.ts file for more information.\n * @abstract\n * @implements {IWamNode}\n */\nexport default class WamNode extends AudioWorkletNode {\n\tconstructor(module, options) {\n\t\tsuper(module.audioContext, module.moduleId, options);\n\t}\n\n\tget processorId() { throw new Error('Not Implemented.'); return null; }\n\n\tget instanceId() { throw new Error('Not Implemented.'); return null; }\n\n\tget module() { throw new Error('Not Implemented.'); return null; }\n\n\tasync getCompensationDelay() { throw new Error('Not Implemented.'); return null; }\n\n\tasync getParameterInfo(...parameterIdQuery) { throw new Error('Not Implemented.'); return null; }\n\n\tasync getParameterValues(normalized, ...parameterIdQuery) { throw new Error('Not Implemented.'); return null; }\n\n\tasync setParameterValues(parameterValues) { throw new Error('Not Implemented.'); }\n\n\tasync getState() { throw new Error('Not Implemented.'); return null; }\n\tasync setState(state) { throw new Error('Not Implemented.'); }\n\n\tscheduleEvents(...events) { throw new Error('Not Implemented.'); }\n\n\tasync clearEvents() { throw new Error('Not Implemented.'); }\n\n\tconnectEvents(to, output) { throw new Error('Not Implemented.'); }\n\n\tdisconnectEvents(to, output) { throw new Error('Not Implemented.'); }\n\n\tdestroy() { throw new Error('Not Implemented.'); }\n}\n", "/** @typedef {import('./types').WamParameter} IWamParameter */\n\n/**\n * WebAudioModule v2 Parameter API,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWamParameter}\n */\nexport default class WamParameter {\n\tconstructor(info) {}\n\n\tget info() { throw new Error('Not Implemented.'); return null; }\n\n\tget value() { throw new Error('Not Implemented.'); return null; }\n\tset value(value) { throw new Error('Not Implemented.'); }\n\n\tget normalizedValue() { throw new Error('Not Implemented.'); return null; }\n\tset normalizedValue(normalizedValue) { throw new Error('Not Implemented.'); }\n}\n", "/** @typedef {import('./types').WamParameterInfo} IWamParameterInfo */\n\n/**\n * WebAudioModule v2 ParameterInfo API,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWamParameterInfo}\n */\nexport default class WamParameterInfo {\n    constructor(id, config) {}\n\n\tget id() { throw new Error('Not Implemented.'); return null; }\n\n    get label() { throw new Error('Not Implemented.'); return null; }\n    get type() { throw new Error('Not Implemented.'); return null; }\n    get defaultValue() { throw new Error('Not Implemented.'); return null; }\n    get minValue() { throw new Error('Not Implemented.'); return null; }\n    get maxValue() { throw new Error('Not Implemented.'); return null; }\n    get discreteStep() { throw new Error('Not Implemented.'); return null; }\n    get exponent() { throw new Error('Not Implemented.'); return null; }\n    get choices() { throw new Error('Not Implemented.'); return null; }\n    get units() { throw new Error('Not Implemented.'); return null; }\n\n    normalize(value) { throw new Error('Not Implemented.'); return null; }\n\n\tdenormalize(value) { throw new Error('Not Implemented.'); return null; }\n\n\tvalueString(value) { throw new Error('Not Implemented.'); return null; }\n}\n", "/** @typedef {import('./types').WamProcessor} IWamProcessor */\n\n/** @type {typeof import('./types').AudioWorkletProcessor} */\nconst AudioWorkletProcessor = globalThis.AudioWorkletProcessor;\n\n/**\n * WebAudioModule v2 Processor API,\n * used in the audio thread, see d.ts file for more information.\n * @abstract\n * @implements {IWamProcessor}\n */\nexport default class WamProcessor extends AudioWorkletProcessor {\n\tget moduleId() { throw new Error('Not Implemented.'); return null; }\n\n\tget instanceId() { throw new Error('Not Implemented.'); return null; }\n\n\tgetCompensationDelay() { throw new Error('Not Implemented.'); return null; }\n\n\tscheduleEvents(...events) { throw new Error('Not Implemented.'); }\n\n\temitEvents(...events) { throw new Error('Not Implemented.'); }\n\n\tclearEvents() { throw new Error('Not Implemented.'); }\n\n\tdestroy() { throw new Error('Not Implemented.'); }\n}\n", "/** @typedef {import('./types').WamDescriptor} IWamDescriptor */\n/** @typedef {import('./types').WamNode} IWamNode */\n/** @typedef {import('./types').WebAudioModule} IWebAudioModule */\n\n/**\n * WebAudioModule v2 Main Class API,\n * see d.ts file for more information.\n * @abstract\n * @implements {IWebAudioModule}\n */\nexport default class WebAudioModule {\n\tstatic get isWebAudioModuleConstructor() { throw new Error('Not Implemented.'); return null; }\n\n\tstatic async createInstance(audioContext, initialState) { throw new Error('Not Implemented.'); return null; }\n\n\tconstructor(audioContext) {}\n\n\tget isWebAudioModule() { throw new Error('Not Implemented.'); return null; }\n\n\tget audioContext() { throw new Error('Not Implemented.'); return null; }\n\tset audioContext(audioContext) { throw new Error('Not Implemented.'); }\n\n\tget audioNode() { throw new Error('Not Implemented.'); return null; }\n\tset audioNode(audioNode) { throw new Error('Not Implemented.'); }\n\n\tget initialized() { throw new Error('Not Implemented.'); return null; }\n\tset initialized(initialized) { throw new Error('Not Implemented.'); }\n\n\tget moduleId() { throw new Error('Not Implemented.'); return null; }\n\n\tget instanceId() { throw new Error('Not Implemented.'); return null; }\n\tset instanceId(instanceId) { throw new Error('Not Implemented.'); }\n\n\tget descriptor() { throw new Error('Not Implemented.'); return null; }\n\n\tget name() { throw new Error('Not Implemented.'); return null; }\n\n\tget vendor() { throw new Error('Not Implemented.'); return null; }\n\n\tasync initialize(state) { throw new Error('Not Implemented.'); return null; }\n\n\tasync createAudioNode(initialState) { throw new Error('Not Implemented.'); return null; }\n\n\tasync createGui() { throw new Error('Not Implemented.'); return null; }\n\n\tdestroyGui(gui) { throw new Error('Not Implemented.'); }\n}\n", "export default \"2.0.0-alpha.2\";\n"],
  "mappings": "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",
  "names": []
}
